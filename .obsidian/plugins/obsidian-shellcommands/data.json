{
  "default_shells": {},
  "working_directory": "Sandbox",
  "preview_variables_in_command_palette": true,
  "shell_commands": {
    "0": {
      "alias": "Git GUI (No need to test)",
      "confirm_execution": false,
      "ignore_error_codes": [
        259
      ],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "git-gui"
      },
      "shells": {}
    },
    "1": {
      "alias": "Git Bash (No need to test)",
      "ignore_error_codes": [],
      "confirm_execution": false,
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "start \"\" \"%PROGRAMFILES%\\Git\\bin\\sh.exe\" --login"
      },
      "shells": {}
    },
    "2": {
      "alias": "Clipboard {{clipboard}} to file",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Clipboard: {{clipboard}}\" >> TestResults.md"
      },
      "shells": {}
    },
    "3": {
      "alias": "Date and time {{date:YYYY-MM-DD HH:mm:ss}} to file",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Date and time: {{date:YYYY-MM-DD HH:mm:ss}}\" >> TestResults.md"
      },
      "shells": {}
    },
    "4": {
      "alias": "File name {{file_name}} to file",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"File name: {{file_name}}\" >> TestResults.md"
      },
      "shells": {}
    },
    "5": {
      "alias": "Absolute file path {{file_path:absolute}} to file",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Absolute file path: {{file_path:absolute}}\" >> TestResults.md"
      },
      "shells": {}
    },
    "6": {
      "alias": "Relative file path {{file_path:relative}} to file",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Relative file path: {{file_path:relative}}\" >> TestResults.md"
      },
      "shells": {}
    },
    "7": {
      "alias": "Folder name {{folder_name}} to file",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Folder name: {{folder_name}}\" >> TestResults.md"
      },
      "shells": {}
    },
    "8": {
      "alias": "Absolute folder path {{folder_path:absolute}} to file",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Absolute folder path: {{folder_path:absolute}}\" >> TestResults.md"
      },
      "shells": {}
    },
    "9": {
      "alias": "Relative folder path {{folder_path:relative}} to file",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Relative folder path: {{folder_path:relative}}\" >> TestResults.md"
      },
      "shells": {}
    },
    "10": {
      "alias": "Selection {{selection}} to file",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Selection: {{selection}}\" >> TestResults.md"
      },
      "shells": {}
    },
    "11": {
      "alias": "Title {{title}} to file",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Title: {{title}}\" >> TestResults.md"
      },
      "shells": {}
    },
    "12": {
      "alias": "Vault path {{vault_path}} to file",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Vault path: {{vault_path}}\" >> TestResults.md"
      },
      "shells": {}
    },
    "13": {
      "alias": "Workspace {{workspace}} to file",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Workspace: {{workspace}}\" >> TestResults.md"
      },
      "shells": {}
    },
    "14": {
      "alias": "FINISH TEST (Windows)",
      "confirm_execution": true,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "type TestResults.md >> \"..\\Performed tests\\{{date:YYYY-MM-DD}} (incomplete).md\" & break > TestResults.md"
      },
      "shells": {}
    },
    "15": {
      "alias": "Test working directory (Windows)",
      "ignore_error_codes": [],
      "confirm_execution": false,
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo Working directory: %cd% >> \"{{vault_path}}\\Sandbox\\TestResults.md\""
      },
      "shells": {}
    },
    "16": {
      "alias": "Doomed to eternal failure",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "cd NonExistingFolder"
      },
      "shells": {}
    },
    "17": {
      "alias": "Character encoding test",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Test non-ASCII characters: Å Ä Ö\" >> TestResults.md"
      },
      "shells": {}
    },
    "18": {
      "alias": "Test to ignore error code",
      "confirm_execution": false,
      "ignore_error_codes": [
        1,
        2
      ],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "cd NonExistingFolder"
      },
      "shells": {}
    },
    "19": {
      "alias": "Test working directory (Linux)",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo Working directory: `pwd` >> \"{{vault_path}}/Sandbox/TestResults.md\""
      },
      "shells": {}
    },
    "20": {
      "alias": "FINISH TEST (Linux)",
      "confirm_execution": true,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "cat TestResults.md >> \"../Performed tests/{{date:YYYY-MM-DD}} (incomplete).md\" && echo -n \"\" > TestResults.md"
      },
      "shells": {}
    },
    "21": {
      "alias": "Terminal in test suite folder (Linux) (No need to test)",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "cd \"{{vault_path}}\" && xfce4-terminal"
      },
      "shells": {}
    },
    "22": {
      "alias": "Git pull (No need to test)",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "notification",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "git pull"
      },
      "shells": {}
    },
    "23": {
      "alias": "Test empty command",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "shells": {},
      "platform_specific_commands": {
        "default": ""
      }
    },
    "24": {
      "alias": "Tags {{tags:, }} to file",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Tags: {{tags:, }}\" >> TestResults.md"
      },
      "shells": {}
    },
    "25": {
      "alias": "Hello world!",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "notification",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Hello world!\""
      },
      "shells": {}
    },
    "26": {
      "alias": "Test output insertion",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "current-file-caret",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Text output test\""
      },
      "shells": {}
    },
    "27": {
      "alias": "Terminal in plugin folder (Linux) (No need to test)",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "cd \"{{vault_path}}/.obsidian/plugins/obsidian-shellcommands\" && xfce4-terminal"
      },
      "shells": {}
    },
    "28": {
      "alias": "Test output to stderr, with exit code 0",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"This goes to stderr\" >&2"
      },
      "shells": {}
    },
    "29": {
      "alias": "Test output to top",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "current-file-top",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"TEXT TO TOP\""
      },
      "shells": {}
    },
    "31": {
      "alias": "Test output to bottom (Windows)",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "current-file-bottom",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo. && echo \"TEXT TO BOTTOM\""
      },
      "shells": {}
    },
    "32": {
      "alias": "Test output to bottom (Linux)",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "current-file-bottom",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"\\nTEXT TO BOTTOM\""
      },
      "shells": {}
    },
    "33": {
      "alias": "Test output to status bar",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "status-bar",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Multiline output\" && echo \"hides earlier lines.\" && echo \"Only the last line is permanently displayed on the status bar.\""
      },
      "shells": {}
    },
    "34": {
      "alias": "Test output to clipboard",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "clipboard",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "echo \"Hello clipboard!\""
      },
      "shells": {}
    }
  },
  "error_message_duration": 20,
  "notification_message_duration": 10,
  "commands": []
}